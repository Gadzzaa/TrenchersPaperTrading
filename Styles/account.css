* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: #0d0d0d;
  font-family: 'Poppins', sans-serif;
  color: #e0e0e0;
  min-height: 100vh;
  padding: 0.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Container */
.container {
  padding: 0.8rem;
  max-width: 320px;
  width: 100%;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.6);
  position: relative;
  background: linear-gradient(135deg, #0d0d0d, #111111, #0d0d0d);
  background-size: 400% 400%;
  animation: breathingBackground 20s ease infinite;
  border-radius: 20px;
  overflow: hidden;
}

.spinnerBlock {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
}

.spinnerOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(15, 15, 15, 0.85);
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
  border-radius: 10px;
  z-index: 20;
}

.spinner {
  width: 32px;
  height: 32px;
  border: 4px solid rgba(0, 255, 171, 0.2);
  border-top: 4px solid #00FFAB;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

.spinnerText {
  font-size: 0.8rem;
  color: #aaa;
  letter-spacing: 0.5px;
  opacity: 0.8;
}

.topBar {
  position: relative;
  text-align: center;
  margin-bottom: 0.5rem;
}

#titleContainer {
  font-size: 1.2rem;
  font-weight: bold;
  background: linear-gradient(90deg, #00FFAB, #FF4081);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

label {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.9rem;
  margin-bottom: 0.2rem;
  display: block;
  transition: color 0.3s ease;
}

label:hover {
  color: rgba(93, 228, 199, 0.85);
  /* slight hover glow */
}

input[type="text"],
input[type="password"] {
  width: 100%;
  padding: 0.5rem;
  margin-top: 0.3rem;
  margin-bottom: 0.8rem;
  background: rgba(255, 255, 255, 0.025);
  border: 1px solid rgba(93, 228, 199, 0.2);
  /* soft clean border */
  border-radius: 10px;
  font-size: 0.95rem;
  color: #e6e6e6;
  transition: all 0.3s ease;
}

input[type="text"]:focus,
input[type="password"]:focus {
  outline: none;
  border: 1px solid rgba(93, 228, 199, 0.5);
  /* brighter on focus */
  background: rgba(0, 255, 171, 0.05);
  box-shadow: 0 0 10px rgba(93, 228, 199, 0.25);
  /* soft visible glow */
}

.rememberContainer {
  display: flex;
  align-items: center;
  margin-top: 0.5rem;
  font-size: 0.9rem;
  color: rgba(255, 255, 255, 0.8);
}

.checkboxWrapper {
  display: flex;
  align-items: center;
  cursor: pointer;
  position: relative;
  gap: 0.5rem;
}

.checkboxWrapper input[type="checkbox"] {
  opacity: 0;
  position: absolute;
}

.customCheckbox {
  width: 18px;
  height: 18px;
  background: rgba(255, 255, 255, 0.04);
  border: 1px solid rgba(93, 228, 199, 0.2);
  border-radius: 4px;
  position: relative;
  transition: background 0.3s ease, border-color 0.3s ease;
}


.customCheckbox::after {
  content: "";
  position: absolute;
  left: 5px;
  top: 1px;
  width: 4px;
  height: 9px;
  border: solid rgba(93, 228, 199, 0.8);
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.checkboxWrapper input[type="checkbox"]:checked+.customCheckbox::after {
  opacity: 1;
  border-color: rgba(93, 228, 199, 0.5);
  box-shadow: 0 0 4px rgba(93, 228, 199, 0.3);
}

#loginButton,
#registerButton {
  width: 100%;
  padding: 0.6rem;
  margin-top: 0.5rem;
  background: linear-gradient(90deg, rgba(0, 255, 171, 0.5), rgba(77, 168, 218, 0.5));
  /* 50% opacity */
  border: 1px solid rgba(93, 228, 199, 0.3);
  border-radius: 12px;
  color: #ffffff;
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.3s ease;
}

#loginButton:hover,
#registerButton:hover {
  background: linear-gradient(90deg, rgba(0, 255, 171, 0.7), rgba(77, 208, 225, 0.7));
  /* brighter on hover */
  box-shadow: 0 0 10px rgba(93, 228, 199, 0.35);
  /* clean soft hover */
}

.sectionDivider {
  border: none;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  width: 50%;
  margin: 0.5rem auto;
}

.footerContainer {
  text-align: center;
  font-size: 0.6rem;
  color: #777;
  margin-top: 0.8rem;
}

.footerContainer img.githubLogo {
  width: 24px;
  height: 24px;
  margin-top: 0.3rem;
  transition: transform 0.3s ease;
}

.footerContainer img.githubLogo:hover {
  transform: scale(1.1);
}

#notificationPopup {
  position: absolute;
  bottom: 1rem;
  left: 50%;
  transform: translateX(-50%) translateY(10px);
  color: #0d0d0d;
  padding: 0.4rem 1rem;
  border-radius: 20px;
  font-size: 0.75rem;
  font-weight: 600;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.4s ease, transform 0.4s ease;
  z-index: 30;
}

#notificationInner {
  display: inline-block;
  transform: scale(1);
  transition: transform 0.4s ease;
}

/* Different color types */
.successNotification {
  background: #00FFAB;
  color: #0d0d0d;
  box-shadow: 0 4px 10px rgba(0, 255, 171, 0.4);
}

.errorNotification {
  background: #FF4B5C;
  color: #ffffff;
  box-shadow: 0 4px 10px rgba(255, 75, 92, 0.4);
}

.infoNotification {
  background: #4DA8DA;
  color: #ffffff;
  box-shadow: 0 4px 10px rgba(77, 168, 218, 0.4);
}

@keyframes breathingBackground {
  0% {
    background-position: 0% 50%;
  }

  50% {
    background-position: 100% 50%;
  }

  100% {
    background-position: 0% 50%;
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes textScalePop {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.15);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes textGlowPulse {
  0% {
    text-shadow: 0 0 0px rgba(0, 255, 171, 0);
  }

  50% {
    text-shadow: 0 0 8px rgba(0, 255, 171, 0.6);
  }

  100% {
    text-shadow: 0 0 0px rgba(0, 255, 171, 0);
  }
}

@keyframes slideUpFadeIn {
  0% {
    opacity: 0;
    transform: translateX(-50%) translateY(10px);
  }

  100% {
    opacity: 1;
    transform: translateX(-50%) translateY(-10px);
  }
}

@keyframes slideDownFadeOut {
  0% {
    opacity: 1;
    transform: translateX(-50%) translateY(-10px);
  }

  100% {
    opacity: 0;
    transform: translateX(-50%) translateY(10px);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}
